apiVersion: graphql.gloo.solo.io/v1beta1
kind: GraphQLApi
metadata:
  name: petstore-graphql
  namespace: gloo-system
spec:
  executableSchema:
    executor:
      local:
        enableIntrospection: true
        resolutions:
          Query|pets:
            restResolver:
              request:
                headers:
                  :method: GET
                  :path: /api/pets
              upstreamRef:
                name: default-petstore-8080
                namespace: gloo-system
          Mutation|createPet:
            restResolver:
              request:
                body:
                  id: '{$args.petInput.id}'
                  name: '{$args.petInput.name}'
                  status: '{$args.petInput.status}'
                headers:
                  :method: POST
                  :path: /api/pets
              upstreamRef:
                name: default-petstore-8080
                namespace: gloo-system
    schemaDefinition: |
      type Query {
        """List of all pets"""
        pets: [Pet] @resolve(name: "Query|pets")
      }

      scalar JSON

      type Mutation {
        """Create a pet"""
        createPet(petInput: PetInput!): JSON @resolve(name: "Mutation|createPet")
      }

      """Each pet has a Pet entry"""
      type Pet {
      """Unique identifier for pet"""
      id: String
      """The pet's name"""
      name: String
      """Pet status in store"""
      status: String
      }

      input PetInput {
        id: String
        name: String
        status: String
      }

