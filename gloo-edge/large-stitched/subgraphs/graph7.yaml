apiVersion: graphql.gloo.solo.io/v1beta1
kind: GraphQLApi
metadata:
  name: graph7
  namespace: gloo-system
spec:
  executableSchema:
    executor:
      local:
        enableIntrospection: true
        resolutions:
          company_06:
            mockResolver:
              syncResponse:
                name: foo
    schemaDefinition: |
      
      type Address_06 {
        
        address: String

        
        city: String

        
        state: String
      }

      
      type Capsule_06 {
        
        dragon: Dragon_06

        
        id: ID

        
        landings: Int

        
        missions: [CapsuleMission_06]

        
        original_launch: Date

        
        reuse_count: Int

        
        status: String

        
        type: String
      }

      
      type CapsuleMission_06 {
        
        flight: Int

        
        name: String
      }

      
      input CapsulesFind_06 {
        
        id: ID

        
        landings: Int

        
        mission: String

        
        original_launch: Date

        
        reuse_count: Int

        
        status: String

        
        type: String
      }

      
      type Core_06 {
        
        asds_attempts: Int

        
        asds_landings: Int

        
        block: Int

        
        id: ID

        
        missions: [CapsuleMission_06]

        
        original_launch: Date

        
        reuse_count: Int

        
        rtls_attempts: Int

        
        rtls_landings: Int

        
        status: String

        
        water_landing: Boolean
      }

      
      type CoreMission_06 {
        
        flight: Int

        
        name: String
      }

      
      input CoresFind_06 {
        
        asds_attempts: Int

        
        asds_landings: Int

        
        block: Int

        
        id: String

        
        missions: String

        
        original_launch: Date

        
        reuse_count: Int

        
        rtls_attempts: Int

        
        rtls_landings: Int

        
        status: String

        
        water_landing: Boolean
      }

      
      scalar Date

      
      type Distance_06 {
        
        feet: Float

        
        meters: Float
      }

      
      type Dragon_06 {
        
        active: Boolean

        
        crew_capacity: Int

        
        description: String

        
        diameter: Distance_06

        
        dry_mass_kg: Int

        
        dry_mass_lb: Int

        
        first_flight: String

        
        heat_shield: DragonHeatShield_06

        
        height_w_trunk: Distance_06

        
        id: ID

        
        launch_payload_mass: Mass_06

        
        launch_payload_vol: Volume_06

        
        name: String

        
        orbit_duration_yr: Int

        
        pressurized_capsule: DragonPressurizedCapsule_06

        
        return_payload_mass: Mass_06

        
        return_payload_vol: Volume_06

        
        sidewall_angle_deg: Float

        
        thrusters: [DragonThrust_06]

        
        trunk: DragonTrunk_06

        
        type: String

        
        wikipedia: String
      }

      
      type DragonHeatShield_06 {
        
        dev_partner: String

        
        material: String

        
        size_meters: Float

        
        temp_degrees: Int
      }

      
      type DragonPressurizedCapsule_06 {
        
        payload_volume: Volume_06
      }

      
      type DragonThrust_06 {
        
        amount: Int

        
        fuel_1: String

        
        fuel_2: String

        
        pods: Int

        
        thrust: Force_06

        
        type: String
      }

      
      type DragonTrunk_06 {
        
        cargo: DragonTrunkCargo_06

        
        trunk_volume: Volume_06
      }

      
      type DragonTrunkCargo_06 {
        
        solar_array: Int

        
        unpressurized_cargo: Boolean
      }

      
      type Force_06 {
        
        kN: Float

        
        lbf: Float
      }

      
      type HistoriesResult_06 {
        
        data: [History_06]

        
        result: Result_06
      }

      
      type History_06 {
        
        details: String

        
        event_date_unix: Date

        
        event_date_utc: Date

        
        flight: Launch_06

        
        id: ID

        
        links: Link_06

        
        title: String
      }

      
      input HistoryFind_06 {
        
        end: Date

        
        flight_number: Int

        
        id: ID

        
        start: Date
      }

      
      type Info_06 {
        
        ceo: String

        
        coo: String

        
        cto: String

        
        cto_propulsion: String

        
        employees: Int

        
        founded: Int

        
        founder: String

        
        headquarters: Address_06

        
        launch_sites: Int

        
        links: InfoLinks_06

        
        name: String

        
        summary: String

        
        test_sites: Int

        
        valuation: Float

        
        vehicles: Int
      }

      
      type InfoLinks_06 {
        
        elon_twitter: String

        
        flickr: String

        
        twitter: String

        
        website: String
      }

      
      type Landpad_06 {
        
        attempted_landings: String

        
        details: String

        
        full_name: String

        
        id: ID

        
        landing_type: String

        
        location: Location_06

        
        status: String

        
        successful_landings: String

        
        wikipedia: String
      }

      
      type Launch_06 {
        
        details: String

        
        id: ID

        
        is_tentative: Boolean

        
        launch_date_local: Date

        
        launch_date_unix: Date

        
        launch_date_utc: Date

        
        launch_site: LaunchSite_06

        
        launch_success: Boolean

        
        launch_year: String

        
        links: LaunchLinks_06

        
        mission_id: [String]

        
        mission_name: String

        
        rocket: LaunchRocket_06

        
        ships: [Ship_06]

        
        static_fire_date_unix: Date

        
        static_fire_date_utc: Date

        
        telemetry: LaunchTelemetry_06

        
        tentative_max_precision: String

        
        upcoming: Boolean
      }

      
      input LaunchFind_06 {
        
        apoapsis_km: Float

        
        block: Int

        
        cap_serial: String

        
        capsule_reuse: String

        
        core_flight: Int

        
        core_reuse: String

        
        core_serial: String

        
        customer: String

        
        eccentricity: Float

        
        end: Date

        
        epoch: Date

        
        fairings_recovered: String

        
        fairings_recovery_attempt: String

        
        fairings_reuse: String

        
        fairings_reused: String

        
        fairings_ship: String

        
        gridfins: String

        
        id: ID

        
        inclination_deg: Float

        
        land_success: String

        
        landing_intent: String

        
        landing_type: String

        
        landing_vehicle: String

        
        launch_date_local: Date

        
        launch_date_utc: Date

        
        launch_success: String

        
        launch_year: String

        
        legs: String

        
        lifespan_years: Float

        
        longitude: Float

        
        manufacturer: String

        
        mean_motion: Float

        
        mission_id: String

        
        mission_name: String

        
        nationality: String

        
        norad_id: Int

        
        orbit: String

        
        payload_id: String

        
        payload_type: String

        
        periapsis_km: Float

        
        period_min: Float

        
        raan: Float

        
        reference_system: String

        
        regime: String

        
        reused: String

        
        rocket_id: String

        
        rocket_name: String

        
        rocket_type: String

        
        second_stage_block: String

        
        semi_major_axis_km: Float

        
        ship: String

        
        side_core1_reuse: String

        
        side_core2_reuse: String

        
        site_id: String

        
        site_name_long: String

        
        site_name: String

        
        start: Date

        
        tbd: String

        
        tentative_max_precision: String

        
        tentative: String
      }

      
      type LaunchLinks_06 {
        
        article_link: String

        
        flickr_images: [String]

        
        mission_patch: String

        
        mission_patch_small: String

        
        presskit: String

        
        reddit_campaign: String

        
        reddit_launch: String

        
        reddit_media: String

        
        reddit_recovery: String

        
        video_link: String

        
        wikipedia: String
      }

      
      type LaunchRocket_06 {
        
        fairings: LaunchRocketFairings_06

        
        first_stage: LaunchRocketFirstStage_06

        
        rocket: Rocket_06

        
        rocket_name: String

        
        rocket_type: String

        
        second_stage: LaunchRocketSecondStage_06
      }

      
      type LaunchRocketFairings_06 {
        
        recovered: Boolean

        
        recovery_attempt: Boolean

        
        reused: Boolean

        
        ship: String
      }

      
      type LaunchRocketFirstStage_06 {
        
        cores: [LaunchRocketFirstStageCore_06]
      }

      
      type LaunchRocketFirstStageCore_06 {
        
        block: Int

        
        core: Core_06

        
        flight: Int

        
        gridfins: Boolean

        
        land_success: Boolean

        
        landing_intent: Boolean

        
        landing_type: String

        
        landing_vehicle: String

        
        legs: Boolean

        
        reused: Boolean
      }

      
      type LaunchRocketSecondStage_06 {
        
        block: Int

        
        payloads: [Payload_06]
      }

      
      type LaunchSite_06 {
        
        site_id: String

        
        site_name: String

        
        site_name_long: String
      }

      
      type LaunchTelemetry_06 {
        
        flight_club: String
      }

      
      type LaunchesPastResult_06 {
        
        data: [Launch_06]

        
        result: Result_06
      }

      
      type Launchpad_06 {
        
        attempted_launches: Int

        
        details: String

        
        id: ID

        
        location: Location_06

        
        name: String

        
        status: String

        
        successful_launches: Int

        
        vehicles_launched: [Rocket_06]

        
        wikipedia: String
      }

      
      type Link_06 {
        
        article: String

        
        reddit: String

        
        wikipedia: String
      }

      
      type Location_06 {
        
        latitude: Float

        
        longitude: Float

        
        name: String

        
        region: String
      }

      
      type Mass_06 {
        
        kg: Int

        
        lb: Int
      }

      
      type Mission_06 {
        
        description: String

        
        id: ID

        
        manufacturers: [String]

        
        name: String

        
        payloads: [Payload_06]

        
        twitter: String

        
        website: String

        
        wikipedia: String
      }

      
      type MissionResult_06 {
        
        data: [Mission_06]

        
        result: Result_06
      }

      
      input MissionsFind_06 {
        
        id: ID

        
        manufacturer: String

        
        name: String

        
        payload_id: String
      }
      
      scalar ObjectID_06

      
      type Payload_06 {
        
        customers: [String]

        
        id: ID

        
        manufacturer: String

        
        nationality: String

        
        norad_id: [Int]

        
        orbit: String

        
        orbit_params: PayloadOrbitParams_06

        
        payload_mass_kg: Float

        
        payload_mass_lbs: Float

        
        payload_type: String

        
        reused: Boolean
      }

      
      type PayloadOrbitParams_06 {
        
        apoapsis_km: Float

        
        arg_of_pericenter: Float

        
        eccentricity: Float

        
        epoch: Date

        
        inclination_deg: Float

        
        lifespan_years: Float

        
        longitude: Float

        
        mean_anomaly: Float

        
        mean_motion: Float

        
        periapsis_km: Float

        
        period_min: Float

        
        raan: Float

        
        reference_system: String

        
        regime: String

        
        semi_major_axis_km: Float
      }

      
      input PayloadsFind_06 {
        
        apoapsis_km: Float

        
        customer: String

        
        eccentricity: Float

        
        epoch: Date

        
        inclination_deg: Float

        
        lifespan_years: Float

        
        longitude: Float

        
        manufacturer: String

        
        mean_motion: Float

        
        nationality: String

        
        norad_id: Int

        
        orbit: String

        
        payload_id: ID

        
        payload_type: String

        
        periapsis_km: Float

        
        period_min: Float

        
        raan: Float

        
        reference_system: String

        
        regime: String

        
        reused: Boolean

        
        semi_major_axis_km: Float
      }

      type Query {
        
        capsule_06(id: ID!): Capsule_06

        
        capsules_06(find: CapsulesFind_06, limit: Int, offset: Int, order: String, sort: String): [Capsule_06]

        
        capsulesPast_06(find: CapsulesFind_06, limit: Int, offset: Int, order: String, sort: String): [Capsule_06]

        
        capsulesUpcoming_06(find: CapsulesFind_06, limit: Int, offset: Int, order: String, sort: String): [Capsule_06]

        
        company_06: Info_06 @resolve(name: "company_06")

        
        core_06(id: ID!): Core_06

        
        cores_06(find: CoresFind_06, limit: Int, offset: Int, order: String, sort: String): [Core_06]

        
        coresPast_06(find: CoresFind_06, limit: Int, offset: Int, order: String, sort: String): [Core_06]

        
        coresUpcoming_06(find: CoresFind_06, limit: Int, offset: Int, order: String, sort: String): [Core_06]

        
        dragon_06(id: ID!): Dragon_06

        
        dragons_06(limit: Int, offset: Int): [Dragon_06]

        
        histories_06(find: HistoryFind_06, limit: Int, offset: Int, order: String, sort: String): [History_06]

        
        historiesResult_06(find: HistoryFind_06, limit: Int, offset: Int, order: String, sort: String): HistoriesResult_06

        
        history_06(id: ID!): History_06

        
        landpad_06(id: ID!): Landpad_06

        
        landpads_06(limit: Int, offset: Int): [Landpad_06]

        
        launch_06(id: ID!): Launch_06

        
        launchLatest_06(offset: Int): Launch_06

        
        launchNext_06(offset: Int): Launch_06

        
        launches_06(find: LaunchFind_06, limit: Int, offset: Int, order: String, sort: String): [Launch_06]

        
        launchesPast_06(find: LaunchFind_06, limit: Int, offset: Int, order: String, sort: String): [Launch_06]

        
        launchesPastResult_06(find: LaunchFind_06, limit: Int, offset: Int, order: String, sort: String): LaunchesPastResult_06

        
        launchesUpcoming_06(find: LaunchFind_06, limit: Int, offset: Int, order: String, sort: String): [Launch_06]

        
        launchpad_06(id: ID!): Launchpad_06

        
        launchpads_06(limit: Int, offset: Int): [Launchpad_06]

        
        mission_06(id: ID!): Mission_06

        
        missions_06(find: MissionsFind_06, limit: Int, offset: Int): [Mission_06]

        
        missionsResult_06(find: MissionsFind_06, limit: Int, offset: Int): MissionResult_06

        
        payload_06(id: ID!): Payload_06

        
        payloads_06(find: PayloadsFind_06, limit: Int, offset: Int, order: String, sort: String): [Payload_06]

        
        roadster_06: Roadster_06

        
        rocket_06(id: ID!): Rocket_06

        
        rockets_06(limit: Int, offset: Int): [Rocket_06]

        
        rocketsResult_06(limit: Int, offset: Int): RocketsResult_06

        
        ship_06(id: ID!): Ship_06

        
        ships_06(find: ShipsFind_06, limit: Int, offset: Int, order: String, sort: String): [Ship_06]

        
        shipsResult_06(find: ShipsFind_06, limit: Int, offset: Int, order: String, sort: String): ShipsResult_06
      }
      
      type Result_06 {
        
        totalCount: Int
      }

      
      type Roadster_06 {
        
        apoapsis_au: Float

        
        details: String

        
        earth_distance_km: Float

        
        earth_distance_mi: Float

        
        eccentricity: Float

        
        epoch_jd: Float

        
        inclination: Float

        
        launch_date_unix: Date

        
        launch_date_utc: Date

        
        launch_mass_kg: Int

        
        launch_mass_lbs: Int

        
        longitude: Float

        
        mars_distance_km: Float

        
        mars_distance_mi: Float

        
        name: String

        
        norad_id: Int

        
        orbit_type: Float

        
        periapsis_arg: Float

        
        periapsis_au: Float

        
        period_days: Float

        
        semi_major_axis_au: Float

        
        speed_kph: Float

        
        speed_mph: Float

        
        wikipedia: String
      }

      
      type Rocket_06 {
        
        active: Boolean

        
        boosters: Int

        
        company: String

        
        cost_per_launch: Int

        
        country: String

        
        description: String

        
        diameter: Distance_06

        
        engines: RocketEngines_06

        
        first_flight: Date

        
        first_stage: RocketFirstStage_06

        
        height: Distance_06

        
        id: ID

        
        landing_legs: RocketLandingLegs_06

        
        mass: Mass_06

        
        name: String

        
        payload_weights: [RocketPayloadWeight_06]

        
        second_stage: RocketSecondStage_06

        
        stages: Int

        
        success_rate_pct: Int

        
        type: String

        
        wikipedia: String
      }

      
      type RocketEngines_06 {
        
        engine_loss_max: String

        
        layout: String

        
        number: Int

        
        propellant_1: String

        
        propellant_2: String

        
        thrust_sea_level: Force_06

        
        thrust_to_weight: Float

        
        thrust_vacuum: Force_06

        
        type: String

        
        version: String
      }

      
      type RocketFirstStage_06 {
        
        burn_time_sec: Int

        
        engines: Int

        
        fuel_amount_tons: Float

        
        reusable: Boolean

        
        thrust_sea_level: Force_06

        
        thrust_vacuum: Force_06
      }

      
      type RocketLandingLegs_06 {
        
        material: String

        
        number: Int
      }

      
      type RocketPayloadWeight_06 {
        
        id: String

        
        kg: Int

        
        lb: Int

        
        name: String
      }

      
      type RocketSecondStage_06 {
        
        burn_time_sec: Int

        
        engines: Int

        
        fuel_amount_tons: Float

        
        payloads: RocketSecondStagePayloads_06

        
        thrust: Force_06
      }

      
      type RocketSecondStagePayloadCompositeFairing_06 {
        
        diameter: Distance_06

        
        height: Distance_06
      }

      
      type RocketSecondStagePayloads_06 {
        
        composite_fairing: RocketSecondStagePayloadCompositeFairing_06

        
        option_1: String
      }

      
      type RocketsResult_06 {
        
        data: [Rocket_06]

        
        result: Result_06
      }

      
      type Ship_06 {
        
        abs: Int

        
        active: Boolean

        
        attempted_landings: Int

        
        class: Int

        
        course_deg: Int

        
        home_port: String

        
        id: ID

        
        image: String

        
        imo: Int

        
        missions: [ShipMission_06]

        
        mmsi: Int

        
        model: String

        
        name: String

        
        position: ShipLocation_06

        
        roles: [String]

        
        speed_kn: Float

        
        status: String

        
        successful_landings: Int

        
        type: String

        
        url: String

        
        weight_kg: Int

        
        weight_lbs: Int

        
        year_built: Int
      }

      
      type ShipLocation_06 {
        
        latitude: Float

        
        longitude: Float
      }

      
      type ShipMission_06 {
        
        flight: String

        
        name: String
      }

      
      input ShipsFind_06 {
        
        id: ID

        
        name: String

        
        model: String

        
        type: String

        
        role: String

        
        active: Boolean

        
        imo: Int

        
        mmsi: Int

        
        abs: Int

        
        class: Int

        
        weight_lbs: Int

        
        weight_kg: Int

        
        year_built: Int

        
        home_port: String

        
        status: String

        
        speed_kn: Int

        
        course_deg: Int

        
        latitude: Float

        
        longitude: Float

        
        successful_landings: Int

        
        attempted_landings: Int

        
        mission: String
      }

      
      type ShipsResult_06 {
        
        data: [Ship_06]

        
        result: Result_06
      }

      """
      expression to compare columns of type String. All fields are combined with logical 'AND'.
      """
      input String_comparison_exp_06 {
        
        _eq: String

        
        _gt: String

        
        _gte: String

        
        _ilike: String

        
        _in: [String!]

        
        _is_null: Boolean

        
        _like: String

        
        _lt: String

        
        _lte: String

        
        _neq: String

        
        _nilike: String

        
        _nin: [String!]

        
        _nlike: String

        
        _nsimilar: String

        
        _similar: String
      }
      
      type Volume_06 {
        
        cubic_feet: Int

        
        cubic_meters: Int
      }





